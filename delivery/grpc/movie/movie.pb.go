// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.1
// source: delivery/grpc/movie/movie.proto

package movie

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Search struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Year   string `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	ImdbId string `protobuf:"bytes,3,opt,name=imdb_id,json=imdbId,proto3" json:"imdb_id,omitempty"`
	Type   string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Poster string `protobuf:"bytes,5,opt,name=poster,proto3" json:"poster,omitempty"`
}

func (x *Search) Reset() {
	*x = Search{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_movie_movie_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Search) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Search) ProtoMessage() {}

func (x *Search) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_movie_movie_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Search.ProtoReflect.Descriptor instead.
func (*Search) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_movie_movie_proto_rawDescGZIP(), []int{0}
}

func (x *Search) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Search) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *Search) GetImdbId() string {
	if x != nil {
		return x.ImdbId
	}
	return ""
}

func (x *Search) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Search) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_movie_movie_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_movie_movie_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_movie_movie_proto_rawDescGZIP(), []int{1}
}

func (x *Rating) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Rating) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SearchMovieRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Searchword string `protobuf:"bytes,1,opt,name=searchword,proto3" json:"searchword,omitempty"`
	Pagination int32  `protobuf:"varint,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SearchMovieRequest) Reset() {
	*x = SearchMovieRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_movie_movie_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMovieRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMovieRequest) ProtoMessage() {}

func (x *SearchMovieRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_movie_movie_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMovieRequest.ProtoReflect.Descriptor instead.
func (*SearchMovieRequest) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_movie_movie_proto_rawDescGZIP(), []int{2}
}

func (x *SearchMovieRequest) GetSearchword() string {
	if x != nil {
		return x.Searchword
	}
	return ""
}

func (x *SearchMovieRequest) GetPagination() int32 {
	if x != nil {
		return x.Pagination
	}
	return 0
}

type SearchMovieResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Search `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   string    `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchMovieResponse) Reset() {
	*x = SearchMovieResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_movie_movie_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMovieResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMovieResponse) ProtoMessage() {}

func (x *SearchMovieResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_movie_movie_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMovieResponse.ProtoReflect.Descriptor instead.
func (*SearchMovieResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_movie_movie_proto_rawDescGZIP(), []int{3}
}

func (x *SearchMovieResponse) GetResults() []*Search {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchMovieResponse) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

type GetMovieDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMovieDetailRequest) Reset() {
	*x = GetMovieDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_movie_movie_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieDetailRequest) ProtoMessage() {}

func (x *GetMovieDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_movie_movie_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieDetailRequest.ProtoReflect.Descriptor instead.
func (*GetMovieDetailRequest) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_movie_movie_proto_rawDescGZIP(), []int{4}
}

func (x *GetMovieDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMovieDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string    `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Year       string    `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	Rated      string    `protobuf:"bytes,3,opt,name=rated,proto3" json:"rated,omitempty"`
	Released   string    `protobuf:"bytes,4,opt,name=released,proto3" json:"released,omitempty"`
	Runtime    string    `protobuf:"bytes,5,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Genre      string    `protobuf:"bytes,6,opt,name=genre,proto3" json:"genre,omitempty"`
	Director   string    `protobuf:"bytes,7,opt,name=director,proto3" json:"director,omitempty"`
	Writer     string    `protobuf:"bytes,8,opt,name=writer,proto3" json:"writer,omitempty"`
	Actors     string    `protobuf:"bytes,9,opt,name=actors,proto3" json:"actors,omitempty"`
	Plot       string    `protobuf:"bytes,10,opt,name=plot,proto3" json:"plot,omitempty"`
	Language   string    `protobuf:"bytes,11,opt,name=language,proto3" json:"language,omitempty"`
	Country    string    `protobuf:"bytes,12,opt,name=country,proto3" json:"country,omitempty"`
	Awards     string    `protobuf:"bytes,13,opt,name=awards,proto3" json:"awards,omitempty"`
	Poster     string    `protobuf:"bytes,14,opt,name=poster,proto3" json:"poster,omitempty"`
	Ratings    []*Rating `protobuf:"bytes,15,rep,name=ratings,proto3" json:"ratings,omitempty"`
	Metascore  string    `protobuf:"bytes,16,opt,name=metascore,proto3" json:"metascore,omitempty"`
	ImdbRating string    `protobuf:"bytes,17,opt,name=imdb_rating,json=imdbRating,proto3" json:"imdb_rating,omitempty"`
	ImdbVotes  string    `protobuf:"bytes,18,opt,name=imdb_votes,json=imdbVotes,proto3" json:"imdb_votes,omitempty"`
	ImdbId     string    `protobuf:"bytes,19,opt,name=imdb_id,json=imdbId,proto3" json:"imdb_id,omitempty"`
	Type       string    `protobuf:"bytes,20,opt,name=type,proto3" json:"type,omitempty"`
	Dvd        string    `protobuf:"bytes,21,opt,name=dvd,proto3" json:"dvd,omitempty"`
	BoxOffice  string    `protobuf:"bytes,22,opt,name=box_office,json=boxOffice,proto3" json:"box_office,omitempty"`
	Production string    `protobuf:"bytes,23,opt,name=production,proto3" json:"production,omitempty"`
	Website    string    `protobuf:"bytes,24,opt,name=website,proto3" json:"website,omitempty"`
}

func (x *GetMovieDetailResponse) Reset() {
	*x = GetMovieDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_delivery_grpc_movie_movie_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovieDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieDetailResponse) ProtoMessage() {}

func (x *GetMovieDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_delivery_grpc_movie_movie_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieDetailResponse.ProtoReflect.Descriptor instead.
func (*GetMovieDetailResponse) Descriptor() ([]byte, []int) {
	return file_delivery_grpc_movie_movie_proto_rawDescGZIP(), []int{5}
}

func (x *GetMovieDetailResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetMovieDetailResponse) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *GetMovieDetailResponse) GetRated() string {
	if x != nil {
		return x.Rated
	}
	return ""
}

func (x *GetMovieDetailResponse) GetReleased() string {
	if x != nil {
		return x.Released
	}
	return ""
}

func (x *GetMovieDetailResponse) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *GetMovieDetailResponse) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *GetMovieDetailResponse) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *GetMovieDetailResponse) GetWriter() string {
	if x != nil {
		return x.Writer
	}
	return ""
}

func (x *GetMovieDetailResponse) GetActors() string {
	if x != nil {
		return x.Actors
	}
	return ""
}

func (x *GetMovieDetailResponse) GetPlot() string {
	if x != nil {
		return x.Plot
	}
	return ""
}

func (x *GetMovieDetailResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetMovieDetailResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetMovieDetailResponse) GetAwards() string {
	if x != nil {
		return x.Awards
	}
	return ""
}

func (x *GetMovieDetailResponse) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *GetMovieDetailResponse) GetRatings() []*Rating {
	if x != nil {
		return x.Ratings
	}
	return nil
}

func (x *GetMovieDetailResponse) GetMetascore() string {
	if x != nil {
		return x.Metascore
	}
	return ""
}

func (x *GetMovieDetailResponse) GetImdbRating() string {
	if x != nil {
		return x.ImdbRating
	}
	return ""
}

func (x *GetMovieDetailResponse) GetImdbVotes() string {
	if x != nil {
		return x.ImdbVotes
	}
	return ""
}

func (x *GetMovieDetailResponse) GetImdbId() string {
	if x != nil {
		return x.ImdbId
	}
	return ""
}

func (x *GetMovieDetailResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetMovieDetailResponse) GetDvd() string {
	if x != nil {
		return x.Dvd
	}
	return ""
}

func (x *GetMovieDetailResponse) GetBoxOffice() string {
	if x != nil {
		return x.BoxOffice
	}
	return ""
}

func (x *GetMovieDetailResponse) GetProduction() string {
	if x != nil {
		return x.Production
	}
	return ""
}

func (x *GetMovieDetailResponse) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

var File_delivery_grpc_movie_movie_proto protoreflect.FileDescriptor

var file_delivery_grpc_movie_movie_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d,
	0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x64,
	0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x36, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x54, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a,
	0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x89, 0x05, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x65,
	0x6e, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6c, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x64, 0x62, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x64, 0x62, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x64, 0x62, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x64, 0x62, 0x56, 0x6f, 0x74, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x64, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x6d, 0x64, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x76, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x76, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x78, 0x5f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x78, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x32, 0xcf, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x12, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x15, 0x5a, 0x13, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_delivery_grpc_movie_movie_proto_rawDescOnce sync.Once
	file_delivery_grpc_movie_movie_proto_rawDescData = file_delivery_grpc_movie_movie_proto_rawDesc
)

func file_delivery_grpc_movie_movie_proto_rawDescGZIP() []byte {
	file_delivery_grpc_movie_movie_proto_rawDescOnce.Do(func() {
		file_delivery_grpc_movie_movie_proto_rawDescData = protoimpl.X.CompressGZIP(file_delivery_grpc_movie_movie_proto_rawDescData)
	})
	return file_delivery_grpc_movie_movie_proto_rawDescData
}

var file_delivery_grpc_movie_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_delivery_grpc_movie_movie_proto_goTypes = []interface{}{
	(*Search)(nil),                 // 0: movie.Search
	(*Rating)(nil),                 // 1: movie.Rating
	(*SearchMovieRequest)(nil),     // 2: movie.SearchMovieRequest
	(*SearchMovieResponse)(nil),    // 3: movie.SearchMovieResponse
	(*GetMovieDetailRequest)(nil),  // 4: movie.GetMovieDetailRequest
	(*GetMovieDetailResponse)(nil), // 5: movie.GetMovieDetailResponse
}
var file_delivery_grpc_movie_movie_proto_depIdxs = []int32{
	0, // 0: movie.SearchMovieResponse.results:type_name -> movie.Search
	1, // 1: movie.GetMovieDetailResponse.ratings:type_name -> movie.Rating
	2, // 2: movie.SearchMovie.SearchMovie:input_type -> movie.SearchMovieRequest
	4, // 3: movie.SearchMovie.GetMovieDetail:input_type -> movie.GetMovieDetailRequest
	3, // 4: movie.SearchMovie.SearchMovie:output_type -> movie.SearchMovieResponse
	5, // 5: movie.SearchMovie.GetMovieDetail:output_type -> movie.GetMovieDetailResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_delivery_grpc_movie_movie_proto_init() }
func file_delivery_grpc_movie_movie_proto_init() {
	if File_delivery_grpc_movie_movie_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_delivery_grpc_movie_movie_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Search); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_movie_movie_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_movie_movie_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMovieRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_movie_movie_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMovieResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_movie_movie_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_delivery_grpc_movie_movie_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovieDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_delivery_grpc_movie_movie_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_delivery_grpc_movie_movie_proto_goTypes,
		DependencyIndexes: file_delivery_grpc_movie_movie_proto_depIdxs,
		MessageInfos:      file_delivery_grpc_movie_movie_proto_msgTypes,
	}.Build()
	File_delivery_grpc_movie_movie_proto = out.File
	file_delivery_grpc_movie_movie_proto_rawDesc = nil
	file_delivery_grpc_movie_movie_proto_goTypes = nil
	file_delivery_grpc_movie_movie_proto_depIdxs = nil
}
